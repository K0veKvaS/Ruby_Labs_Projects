require 'minitest/autorun'
require_relative 'array_processor'

class TestArrayProcessor < Minitest::Test
  def setup
    @processor = ArrayProcessor.new([1, 2, 3, 4, 5])
  end

  def test_each
    result = []
    @processor.each { |el| result << el }
    assert_equal [1, 2, 3, 4, 5], result
  end

  def test_cycle
    result = []
    @processor.cycle(3) { |el| result << el }
    assert_equal [1, 2, 3, 4, 5, 1, 2, 3, 4, 5], result
  end

  def test_inject
    sum = @processor.inject(0) { |acc, el| acc + el }
    assert_equal 15, sum
  end

  def test_reject
    result = @processor.reject { |el| el.even? }
    assert_equal [1, 3, 5], result
  end

  def test_sort_by
    result = @processor.sort_by { |el| -el }
    assert_equal [5, 4, 3, 2, 1], result
  end

  def test_each_slice
    result = []
    @processor.each_slice(2) { |slice| result << slice }
    assert_equal [[1, 2], [3, 4], [5]], result
  end

  def test_max_by
    max_element = @processor.max_by { |el| el }
    assert_equal 5, max_element
  end

  # Метод для вызова всех методов ArrayProcessor
  def test_all_methods
    methods_to_test = [:each, :cycle, :inject, :reject, :sort_by, :each_slice, :max_by]

    methods_to_test.each do |method|
      case method
      when :each
        result = []
        @processor.each { |el| result << el }
        assert_equal [1, 2, 3, 4, 5], result
      when :cycle
        result = []
        @processor.cycle(3) { |el| result << el }
        assert_equal [1, 2, 3, 4, 5, 1, 2, 3, 4, 5], result
      when :inject
        sum = @processor.inject(0) { |acc, el| acc + el }
        assert_equal 15, sum
      when :reject
        result = @processor.reject { |el| el.even? }
        assert_equal [1, 3, 5], result
      when :sort_by
        result = @processor.sort_by { |el| -el }
        assert_equal [5, 4, 3, 2, 1], result
      when :each_slice
        result = []
        @processor.each_slice(2) { |slice| result << slice }
        assert_equal [[1, 2], [3, 4], [5]], result
      when :max_by
        max_element = @processor.max_by { |el| el }
        assert_equal 5, max_element
      end
    end
  end
end
